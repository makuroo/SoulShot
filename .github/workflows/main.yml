name: Unity Build & Release

on:
  push:
    branches:
      - main
      
permissions:
  contents: write
  
jobs:
  build:
    name: Build Unity Project
    runs-on: ubuntu-latest
    steps:
      # Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Change Working Directory
        run: |
          cd "Soul-Shot"
          mkdir -p build/StandaloneWindows64

      # Cache Library Folder
      - name: Cache Library Folder
        uses: actions/cache@v3
        with:
          path: "Soul-Shot/Library"
          key: Library-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            Library-${{ runner.os }}-

      # Build Unity Project
      - name: Build Unity Project
        id: build
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: "Soul-Shot"
          targetPlatform: StandaloneWindows64
          buildName: "SoulShot"
          buildsPath: "build"

      # Upload build artifacts (temporary storage)
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: Soul-Shot/build/StandaloneWindows64

      # Generate Changelog
      - name: Generate Changelog
        run: |
          echo "# Changelog" > CHANGELOG.md
          echo "## $(date '+%Y-%m-%d')" >> CHANGELOG.md
          git log --pretty=format:"- %s" $(git describe --tags --abbrev=0)..HEAD >> CHANGELOG.md
          cat CHANGELOG.md

      - name: Setup Game Version File
        run: |
          mkdir -p "Soul-Shot/Assets/Resources"
          GAME_VERSION_FILE="Soul-Shot/Assets/Resources/GameVersion.txt"
          if [ ! -f "$GAME_VERSION_FILE" ]; then
            echo "1.0.0" > "$GAME_VERSION_FILE"
          fi
      
      - name: Auto-Increment Game Version
        id: version
        run: |
          GAME_VERSION_FILE="Soul-Shot/Assets/Resources/GameVersion.txt"
          CURRENT_VERSION=$(cat $GAME_VERSION_FILE)
          NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. -v OFS=. '{
            if(NF==3){$3+=1}  # Major.Minor.Patch
            else if(NF==2){$2+=1}  # Major.Minor
            else if(NF==1){$1+=1}  # Major
            print $0
          }')
          echo $NEW_VERSION > $GAME_VERSION_FILE
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "Updated game version from $CURRENT_VERSION to $NEW_VERSION"
      
      - name: Commit & Push Changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add "Soul-Shot/Assets/Resources/GameVersion.txt"
          git commit -m "[CI] Update game version to ${{ steps.version.outputs.NEW_VERSION }}"
          git push origin main

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Download the build artifacts
      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-output
          path: release-files

      # Create GitHub Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.build.outputs.steps.version.outputs.NEW_VERSION }}
          name: "SoulShot v${{ needs.build.outputs.steps.version.outputs.NEW_VERSION }}"
          body_path: CHANGELOG.md
          files: |
            release-files/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
